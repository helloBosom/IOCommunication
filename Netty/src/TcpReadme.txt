TCP是一个流协议（没有界限的一串数据）
上层应用采用4种方式区分
（1）消息固定长度，累计读取到长度总和为定长的len的报文后，就认为读取到了一个完整的消息；将计数器重置，重新开始
读取下一个数据报
（2）将回车换行符作为消息结束符，例如ftp协议
（3）将特殊的分隔符作为消息的结束标志
（4）通过消息头定义长度字段来标识消息的总长度
netty优势：解决TCP粘包/拆包导致的半包读写问题
LineBasedFrameDecoder的工作原理是它一次遍历Bytebuf中的可读字节，判断是否有“\n”或者“\r\n”，如果有，就以此位置
为结束位置，从可读索引到结束位置区间的字节就组成了一行。是以换行符为结束标志的解码器，支持携带结束符或者不携带结束符两种解
码方式，同时支持配置单行的最大长度。如果连续读取到最大长度后仍然没有发现换行符，就会抛出异常，同时忽略掉之前读到的异常码流。
StringDecoder将接收到的对象转换成字符串，然后继续调用后面的handler。

LineBasedFrameDecoder+StringDecoder组合是按行切换的文本解码器，被设计用来支持TCP的粘包和拆包。
DelimiterBasedFrameDecoder+StringDecoder用于使用分隔符结尾的消息解码
FixedLengthFrameDecoder+StringDecoder用于按照固定长度进行解码